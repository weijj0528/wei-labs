/**
 * 基于嵌套的访问控制
 * 与 Java 语言中现有的嵌套类型概念一致, 嵌套访问控制是一种控制上下文访问的策略，
 * 允许逻辑上属于同一代码实体，但被编译之后分为多个分散的 class 文件的类，
 * 无需编译器额外的创建可扩展的桥接访问方法，即可访问彼此的私有成员，并且这种改进是在 Java 字节码级别的。
 * <p>
 * 在 Java 11 之前的版本中，编译之后的 class 文件中通过 InnerClasses 和 Enclosing Method 两种属性来帮助编译器确认源码的嵌套关系，
 * 每一个嵌套的类会编译到自己所在的 class 文件中，不同类的文件通过上面介绍的两种属性的来相互连接。
 * 这两种属性对于编译器确定相互之间的嵌套关系已经足够了，但是并不适用于访问控制。
 * 这里大家可以写一段包含内部类的代码，并将其编译成 class 文件，然后通过 javap 命令行来分析
 * <p>
 * Java 11 中引入了两个新的属性：一个叫做 NestMembers 的属性，用于标识其它已知的静态 nest 成员；
 * 另外一个是每个 nest 成员都包含的 NestHost 属性，用于标识出它的 nest 宿主类。
 */
package com.github.weijj0528.nest;